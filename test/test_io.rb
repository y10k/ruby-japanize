# -*- coding: utf-8 -*-

require 'japanize/core'

要求 'japanize/io'
要求 'japanize/test_unit'

部(日本語化) {
  部(:試験) {
    組(:入出力の操作の試験, 原型: 試験単位::試験事例) {
      資料('バイナリ形式で読む'                   => [ :バイナリ形式で読む,                   :binread ],
           'バイナリ形式で書く'                   => [ :バイナリ形式で書く,                   :binwrite ],
           '転写する'                             => [ :転写する,                             :copy_stream ],
           'ファイル記述子から生成'               => [ :ファイル記述子から生成,               :for_fd ],
           '開く'                                 => [ :開く,                                 :open ],
           '一つずつ'                             => [ :一つずつ,                             :foreach ],
           '配管の対を作成'                       => [ :配管の対を作成,                       :pipe ],
           '外部のプログラムを実行して配管を開く' => [ :外部のプログラムを実行して配管を開く, :popen ],
           '読む'                                 => [ :読む,                                 :read ],
           '全行を読む'                           => [ :全行を読む,                           :readlines ],
           '準備ができた入出力を選択'             => [ :準備ができた入出力を選択,             :select ],
           'システムコールで開く'                 => [ :システムコールで開く,                 :sysopen ],
           '可能なら変換'                         => [ :可能なら変換,                         :try_convert ],
           '書く'                                 => [ :書く,                                 :write ])
      試験('特異操作の日本語の別名を確認') {|資料|
        日本語の別名, 元の名前 = 資料
        別名であることを確認(入出力, 日本語の別名, 元の名前)
        含まれることを確認(入出力.公開された操作の一覧, 日本語の別名)
      }

      資料('助言'                                     => [ :助言,                                     :advise ],
           '自動的に閉じる='                          => [ :自動的に閉じる=,                          :autoclose= ],
           '自動的に閉じるか?'                        => [ :自動的に閉じるか?,                        :autoclose? ],
           'バイナリ形式'                             => [ :バイナリ形式,                             :binmode ],
           'バイナリ形式か?'                          => [ :バイナリ形式か?,                          :binmode? ],
           '閉じる'                                   => [ :閉じる,                                   :close ],
           '上書き実行時に閉じる='                    => [ :上書き実行時に閉じる=,                    :close_on_exec= ],
           '上書き実行時に閉じるか?'                  => [ :上書き実行時に閉じるか?,                  :close_on_exec? ],
           '読み込み口を閉じる'                       => [ :読み込み口を閉じる,                       :close_read ],
           '書き込み口を閉じる'                       => [ :書き込み口を閉じる,                       :close_write ],
           '閉じたか?'                                => [ :閉じたか?,                                :closed? ],
           '個別に'                                   => [ :個別に,                                   :each ],
           '行毎に'                                   => [ :行毎に,                                   :each_line ],
           'バイト値毎に'                             => [ :バイト値毎に,                             :each_byte ],
           '文字毎に'                                 => [ :文字毎に,                                 :each_char ],
           '符号点毎に'                               => [ :符号点毎に,                               :each_codepoint ],
           '終端'                                     => [ :終端,                                     :eof ],
           '終端か?'                                  => [ :終端か?,                                  :eof? ],
           '外部文字符号化方式'                       => [ :外部文字符号化方式,                       :external_encoding ],
           'ファイルの制御'                           => [ :ファイルの制御,                           :fcntl ],
           'ファイルの内容を同期する'                 => [ :ファイルの内容を同期する,                 :fdatasync ],
           'ファイル記述子'                           => [ :ファイル記述子,                           :fileno ],
           '整数に変換'                               => [ :整数に変換,                               :to_i ],
           '書き込む'                                 => [ :書き込む,                                 :flush ],
           'ファイルを同期する'                       => [ :ファイルを同期する,                       :fsync ],
           'バイト値を取得'                           => [ :バイト値を取得,                           :getbyte ],
           '文字を取得'                               => [ :文字を取得,                               :getc ],
           '行を取得'                                 => [ :行を取得,                                 :gets ],
           '内部文字符号化方式'                       => [ :内部文字符号化方式,                       :internal_encoding ],
           '入出力を制御'                             => [ :入出力を制御,                             :ioctl ],
           '端末装置の一種'                           => [ :端末装置の一種,                           :isatty ],
           '端末装置か?'                              => [ :端末装置か?,                              :tty? ],
           '行番号'                                   => [ :行番号,                                   :lineno ],
           '行番号='                                  => [ :行番号=,                                  :lineno= ],
           '行の一覧'                                 => [ :行の一覧,                                 :lines ],
           'プロセスの識別番号'                       => [ :プロセスの識別番号,                       :pid ],
           '位置'                                     => [ :位置,                                     :pos ],
           '位置を告げよ'                             => [ :位置を告げよ,                             :tell ],
           '位置='                                    => [ :位置=,                                    :pos= ],
           'この位置で読む'                           => [ :この位置で読む,                           :pread ],
           '印字'                                     => [ :印字,                                     :print ],
           '整形して印字'                             => [ :整形して印字,                             :printf ],
           '文字を出力'                               => [ :文字を出力,                               :putc ],
           '行を出力'                                 => [ :行を出力,                                 :puts ],
           'この位置で書く'                           => [ :この位置で書く,                           :pwrite ],
           '読む'                                     => [ :読む,                                     :read ],
           '遮られずに読む'                           => [ :遮られずに読む,                           :read_nonblock ],
           'バイト値を読む'                           => [ :バイト値を読む,                           :readbyte ],
           '文字を読む'                               => [ :文字を読む,                               :readchar ],
           '行を読む'                                 => [ :行を読む,                                 :readline ],
           '全行を読む'                               => [ :全行を読む,                               :readlines ],
           '準備された分だけ読む'                     => [ :準備された分だけ読む,                     :readpartial ],
           '開き直す'                                 => [ :開き直す,                                 :reopen ],
           '巻き戻す'                                 => [ :巻き戻す,                                 :rewind ],
           '移動'                                     => [ :移動,                                     :seek ],
           '文字符号化方式を設定'                     => [ :文字符号化方式を設定,                     :set_encoding ])
      資料('バイト順序の標識から文字符号化方式を設定' => [ :バイト順序の標識から文字符号化方式を設定, :set_encoding_by_bom ]) if (入出力.公開された操作は定義済みか? :set_encoding_by_bom, 偽値)
      資料('状態を取得'                               => [ :状態を取得,                               :stat ],
           '同期'                                     => [ :同期,                                     :sync ],
           '同期='                                    => [ :同期=,                                    :sync= ],
           'システムコールで読む'                     => [ :システムコールで読む,                     :sysread ],
           'システムコールで移動'                     => [ :システムコールで移動,                     :sysseek ],
           'システムコールで書く'                     => [ :システムコールで書く,                     :syswrite ],
           '入出力に変換'                             => [ :入出力に変換,                             :to_io ],
           'バイト値を戻す'                           => [ :バイト値を戻す,                           :ungetbyte ],
           '文字を戻す'                               => [ :文字を戻す,                               :ungetc ],
           '書く'                                     => [ :書く,                                     :write ],
           '遮られずに書く'                           => [ :遮られずに書く,                           :write_nonblock ])
      試験('公開された操作の日本語の別名を確認') {|資料|
        日本語の別名, 元の名前 = 資料
        ある入出力 = 標準出力
        生成物であることを確認(入出力, ある入出力)
        別名であることを確認(ある入出力, 日本語の別名, 元の名前)
        含まれることを確認(入出力.生成物が持つ公開された操作の一覧, 日本語の別名)
      }

      資料('先頭から移動'       => [ 入出力::先頭から移動,       IO::SEEK_SET ],
           '現在の位置から移動' => [ 入出力::現在の位置から移動, IO::SEEK_CUR ],
           '末尾から移動'       => [ 入出力::末尾から移動,       IO::SEEK_END ])
      資料('次の内容へ移動',       [ 入出力::次の内容へ移動,     IO::SEEK_DATA ]) if (defined? IO::SEEK_DATA)
      資料('次の空隙へ移動',       [ 入出力::次の空隙へ移動,     IO::SEEK_HOLE ]) if (defined? IO::SEEK_HOLE)
      試験('日本語の定数を確認') {|資料|
        日本語の定数の値, 元の定数の値 = 資料
        同一であることを確認(元の定数の値, 日本語の定数の値)
      }
    }

    組(:ファイルの操作の試験, 原型: 試験単位::試験事例) {
      資料('ファイルへの絶対的な経路'                 => [ :ファイルへの絶対的な経路,                 :absolute_path ])
      資料('ファイルへの絶対的な経路か?'              => [ :ファイルへの絶対的な経路か?,              :absolute_path? ]) if (ファイル.公開された操作は定義済みか? :absolute_path?, 偽値)
      資料('最終利用時刻'                             => [ :最終利用時刻,                             :atime ],
           'ファイル名を取得'                         => [ :ファイル名を取得,                         :basename ],
           '作成時刻'                                 => [ :作成時刻,                                 :birthtime ],
           '固定長で入出力する装置か?'                => [ :固定長で入出力する装置か?,                :blockdev? ],
           '文字単位で入出力する装置か?'              => [ :文字単位で入出力する装置か?,              :chardev? ],
           '操作許可を変更'                           => [ :操作許可を変更,                           :chmod ],
           '所有者を変更'                             => [ :所有者を変更,                             :chown ],
           '最終状態変更時刻'                         => [ :最終状態変更時刻,                         :ctime ],
           '削除'                                     => [ :削除,                                     :delete ],
           '結び付きを解く'                           => [ :結び付きを解く,                           :unlink ],
           'ディレクトリか?'                          => [ :ディレクトリか?,                          :directory? ],
           'ディレクトリ名を取得'                     => [ :ディレクトリ名を取得,                     :dirname ],
           '大きさが零か?'                            => [ :大きさが零か?,                            :zero? ],
           '空か?'                                    => [ :空か?,                                    :empty? ],
           '実行できるか?'                            => [ :実行できるか?,                            :executable? ],
           '実の所属で実行できるか?'                  => [ :実の所属で実行できるか?,                  :executable_real? ],
           '存在するか?'                              => [ :存在するか?,                              :exist? ],
           'ファイルへの経路を展開'                   => [ :ファイルへの経路を展開,                   :expand_path ],
           '拡張子を取得'                             => [ :拡張子を取得,                             :extname ],
           'ファイルか?'                              => [ :ファイルか?,                              :file? ],
           '名前の一致'                               => [ :名前の一致,                               :fnmatch ],
           '名前が一致するか?'                        => [ :名前が一致するか?,                        :fnmatch? ],
           'ファイルの種類'                           => [ :ファイルの種類,                           :ftype ],
           '実効グループに所属するか?'                => [ :実効グループに所属するか?,                :grpowned? ],
           '同一のファイルか?'                        => [ :同一のファイルか?,                        :identical? ],
           '結合'                                     => [ :結合,                                     :join ],
           '連係先の操作許可を変更'                   => [ :連係先の操作許可を変更,                   :lchmod ],
           '連係先の所有者を変更'                     => [ :連係先の所有者を変更,                     :lchown ],
           '結び付ける'                               => [ :結び付ける,                               :link ],
           '連係先の状態を取得'                       => [ :連係先の状態を取得,                       :lstat ],
           '連係先の利用更新時刻を変更'               => [ :連係先の利用更新時刻を変更,               :lutime ],
           '配管ファイルを作成'                       => [ :配管ファイルを作成,                       :mkfifo ],
           '最終更新時刻'                             => [ :最終更新時刻,                             :mtime ],
           '開く'                                     => [ :開く,                                     :open ],
           '所有しているか?'                          => [ :所有しているか?,                          :owned? ],
           'ファイルへの経路'                         => [ :ファイルへの経路,                         :path ],
           '配管か?'                                  => [ :配管か?,                                  :pipe? ],
           '読めるか?'                                => [ :読めるか?,                                :readable? ],
           '実の所属で読めるか?'                      => [ :実の所属で読めるか?,                      :readable_real? ],
           '連係する経路を読む'                       => [ :連係する経路を読む,                       :readlink ],
           'ディレクトリまで実在するファイルへの経路' => [ :ディレクトリまで実在するファイルへの経路, :realdirpath ],
           '実在するファイルへの経路'                 => [ :実在するファイルへの経路,                 :realpath ],
           '名前を変更'                               => [ :名前を変更,                               :rename ],
           '実効グループを変更するか?'                => [ :実効グループを変更するか?,                :setgid? ],
           '実効ユーザを変更するか?'                  => [ :実効ユーザを変更するか?,                  :setuid? ],
           '大きさ'                                   => [ :大きさ,                                   :size ],
           '内容があるか?'                            => [ :内容があるか?,                            :size? ],
           'ソケットか?'                              => [ :ソケットか?,                              :socket? ],
           '分割'                                     => [ :分割,                                     :split ],
           '状態を取得'                               => [ :状態を取得,                               :stat ],
           '貼り付くか?'                              => [ :貼り付くか?,                              :sticky? ],
           '名前で連係する'                           => [ :名前で連係する,                           :symlink ],
           '名前による連係か?'                        => [ :名前による連係か?,                        :symlink? ],
           '切り捨てる'                               => [ :切り捨てる,                               :truncate ],
           '作成時の操作許可の取捨選択'               => [ :作成時の操作許可の取捨選択,               :umask ],
           '利用更新時刻を変更'                       => [ :利用更新時刻を変更,                       :utime ],
           '誰でも読めるか?'                          => [ :誰でも読めるか?,                          :world_readable? ],
           '誰でも書けるか?'                          => [ :誰でも書けるか?,                          :world_writable? ],
           '書けるか?'                                => [ :書けるか?,                                :writable? ],
           '実の所属で書けるか?'                      => [ :実の所属で書けるか?,                      :writable_real? ])
      試験('特異操作の日本語の別名を確認') {|資料|
        日本語の別名, 元の名前 = 資料
        別名であることを確認(ファイル, 日本語の別名, 元の名前)
        含まれることを確認(ファイル.公開された操作の一覧, 日本語の別名)
      }

      資料('最終利用時刻'           => [ :最終利用時刻,           :atime ],
           '作成時刻'               => [ :作成時刻,               :birthtime ],
           '操作許可を変更'         => [ :操作許可を変更,         :chmod ],
           '所有者を変更'           => [ :所有者を変更,           :chown ],
           '最終状態変更時刻'       => [ :最終状態変更時刻,       :ctime ],
           '排他制御'               => [ :排他制御,               :flock ],
           '連係先の状態を取得'     => [ :連係先の状態を取得,     :lstat ],
           '最終更新時刻'           => [ :最終更新時刻,           :mtime ],
           'ファイルへの経路'       => [ :ファイルへの経路,       :path ],
           'ファイルへの経路に変換' => [ :ファイルへの経路に変換, :to_path ],
           '大きさ'                 => [ :大きさ,                 :size ],
           '切り捨てる'             => [ :切り捨てる,             :truncate ])
      試験('公開された操作の日本語の別名を確認') {|資料|
        日本語の別名, 元の名前 = 資料
        ファイル.開く(ファイル::常に無効な装置) {|あるファイル|
          別名であることを確認(あるファイル, 日本語の別名, 元の名前)
          含まれることを確認(ファイル.生成物が持つ公開された操作の一覧, 日本語の別名)
        }
      }

      資料('区切り文字'                                   => [ ファイル::区切り文字,                                   File::SEPARATOR ],
           'もう一つの区切り文字'                         => [ ファイル::もう一つの区切り文字,                         File::ALT_SEPARATOR ],
           '実行ファイルの探索経路の区切り文字'           => [ ファイル::実行ファイルの探索経路の区切り文字,           File::PATH_SEPARATOR ],
           '追記'                                         => [ ファイル::追記,                                         File::APPEND ],
           'バイナリ'                                     => [ ファイル::バイナリ,                                     File::BINARY ],
           '作成'                                         => [ ファイル::作成,                                         File::CREAT ],
           'すぐに書き込む'                               => [ ファイル::すぐに書き込む,                               File::DIRECT ],
           '内容を同期'                                   => [ ファイル::内容を同期,                                   File::DSYNC ],
           '排他'                                         => [ ファイル::排他,                                         File::EXCL ],
           '名前の一致で大文字と小文字を無視'             => [ ファイル::名前の一致で大文字と小文字を無視,             File::FNM_CASEFOLD ],
           '名前の一致で設定ファイルにを含む'             => [ ファイル::名前の一致で設定ファイルにを含む,             File::FNM_DOTMATCH ],
           '名前の一致で拡張特殊文字を使う'               => [ ファイル::名前の一致で拡張特殊文字を使う,               File::FNM_EXTGLOB ],
           '名前の一致で無効化文字を使わない'             => [ ファイル::名前の一致で無効化文字を使わない,             File::FNM_NOESCAPE ],
           '名前の一致で区切られた範囲に限定'             => [ ファイル::名前の一致で区切られた範囲に限定,             File::FNM_PATHNAME ],
           '名前の一致で基盤に従って大文字と小文字を無視' => [ ファイル::名前の一致で基盤に従って大文字と小文字を無視, File::FNM_SYSCASE ],
           '排他制御で排他'                               => [ ファイル::排他制御で排他,                               File::LOCK_EX ],
           '排他制御で遮られない'                         => [ ファイル::排他制御で遮られない,                         File::LOCK_NB ],
           '排他制御で共有'                               => [ ファイル::排他制御で共有,                               File::LOCK_SH ],
           '排他制御で開放'                               => [ ファイル::排他制御で開放,                               File::LOCK_UN ],
           '利用時刻を更新しない'                         => [ ファイル::利用時刻を更新しない,                         File::NOATIME ],
           '端末装置を制御しない'                         => [ ファイル::端末装置を制御しない,                         File::NOCTTY ],
           '連係を追跡しない'                             => [ ファイル::連係を追跡しない,                             File::NOFOLLOW ],
           '遮られない'                                   => [ ファイル::遮られない,                                   File::NONBLOCK ],
           '常に無効な装置'                               => [ ファイル::常に無効な装置,                               File::NULL ],
           '読み込み専用'                                 => [ ファイル::読み込み専用,                                 File::RDONLY ],
           '読み書き両用'                                 => [ ファイル::読み書き両用,                                 File::RDWR ])
      資料('読み込みを同期',                                 [ ファイル::読み込みを同期,                               File::RSYNC]) if (defined? File::RSYNC)
      資料('削除を共有',                                     [ ファイル::削除を共有,                                   File::SHARE_DELETE ]) if (defined? File::SHARE_DELETE)
      資料('同期'                                         => [ ファイル::同期,                                         File::SYNC ],
           '一時ファイル'                                 => [ ファイル::一時ファイル,                                 File::TMPFILE ],
           '切り捨て'                                     => [ ファイル::切り捨て,                                     File::TRUNC ],
           '書き込み専用'                                 => [ ファイル::書き込み専用,                                 File::WRONLY ])
      試験('日本語の定数を確認') {|資料|
        日本語の定数の値, 元の定数の値 = 資料
        同一であることを確認(元の定数の値, 日本語の定数の値)
      }

      資料('追記'                                         => [ ファイル::定数::追記,                                         File::Constants::APPEND ],
           'バイナリ'                                     => [ ファイル::定数::バイナリ,                                     File::Constants::BINARY ],
           '作成'                                         => [ ファイル::定数::作成,                                         File::Constants::CREAT ],
           'すぐに書き込む'                               => [ ファイル::定数::すぐに書き込む,                               File::Constants::DIRECT ],
           '内容を同期'                                   => [ ファイル::定数::内容を同期,                                   File::Constants::DSYNC ],
           '排他'                                         => [ ファイル::定数::排他,                                         File::Constants::EXCL ],
           '名前の一致で大文字と小文字を無視'             => [ ファイル::定数::名前の一致で大文字と小文字を無視,             File::Constants::FNM_CASEFOLD ],
           '名前の一致で設定ファイルにを含む'             => [ ファイル::定数::名前の一致で設定ファイルにを含む,             File::Constants::FNM_DOTMATCH ],
           '名前の一致で拡張特殊文字を使う'               => [ ファイル::定数::名前の一致で拡張特殊文字を使う,               File::Constants::FNM_EXTGLOB ],
           '名前の一致で無効化文字を使わない'             => [ ファイル::定数::名前の一致で無効化文字を使わない,             File::Constants::FNM_NOESCAPE ],
           '名前の一致で区切られた範囲に限定'             => [ ファイル::定数::名前の一致で区切られた範囲に限定,             File::Constants::FNM_PATHNAME ],
           '名前の一致で基盤に従って大文字と小文字を無視' => [ ファイル::定数::名前の一致で基盤に従って大文字と小文字を無視, File::Constants::FNM_SYSCASE ],
           '排他制御で排他'                               => [ ファイル::定数::排他制御で排他,                               File::Constants::LOCK_EX ],
           '排他制御で遮られない'                         => [ ファイル::定数::排他制御で遮られない,                         File::Constants::LOCK_NB ],
           '排他制御で共有'                               => [ ファイル::定数::排他制御で共有,                               File::Constants::LOCK_SH ],
           '排他制御で開放'                               => [ ファイル::定数::排他制御で開放,                               File::Constants::LOCK_UN ],
           '利用時刻を更新しない'                         => [ ファイル::定数::利用時刻を更新しない,                         File::Constants::NOATIME ],
           '端末装置を制御しない'                         => [ ファイル::定数::端末装置を制御しない,                         File::Constants::NOCTTY ],
           '連係を追跡しない'                             => [ ファイル::定数::連係を追跡しない,                             File::Constants::NOFOLLOW ],
           '遮られない'                                   => [ ファイル::定数::遮られない,                                   File::Constants::NONBLOCK ],
           '常に無効な装置'                               => [ ファイル::定数::常に無効な装置,                               File::Constants::NULL ],
           '読み込み専用'                                 => [ ファイル::定数::読み込み専用,                                 File::Constants::RDONLY ],
           '読み書き両用'                                 => [ ファイル::定数::読み書き両用,                                 File::Constants::RDWR ])
      資料('読み込みを同期',                                 [ ファイル::定数::読み込みを同期,                               File::Constants::RSYNC]) if (defined? File::Constants::RSYNC)
      資料('削除を共有',                                     [ ファイル::定数::削除を共有,                                   File::Constants::SHARE_DELETE ]) if (defined? File::Constants::SHARE_DELETE)
      資料('同期'                                         => [ ファイル::定数::同期,                                         File::Constants::SYNC ],
           '一時ファイル'                                 => [ ファイル::定数::一時ファイル,                                 File::Constants::TMPFILE ],
           '切り捨て'                                     => [ ファイル::定数::切り捨て,                                     File::Constants::TRUNC ],
           '書き込み専用'                                 => [ ファイル::定数::書き込み専用,                                 File::Constants::WRONLY ])
      試験('日本語のファイル定数を確認') {|資料|
        日本語の定数の値, 元の定数の値 = 資料
        同一であることを確認(元の定数の値, 日本語の定数の値)
      }

      資料('追記'                                         => [ :追記,                                         File::Constants::APPEND ],
           'バイナリ'                                     => [ :バイナリ,                                     File::Constants::BINARY ],
           '作成'                                         => [ :作成,                                         File::Constants::CREAT ],
           'すぐに書き込む'                               => [ :すぐに書き込む,                               File::Constants::DIRECT ],
           '内容を同期'                                   => [ :内容を同期,                                   File::Constants::DSYNC ],
           '排他'                                         => [ :排他,                                         File::Constants::EXCL ],
           '名前の一致で大文字と小文字を無視'             => [ :名前の一致で大文字と小文字を無視,             File::Constants::FNM_CASEFOLD ],
           '名前の一致で設定ファイルにを含む'             => [ :名前の一致で設定ファイルにを含む,             File::Constants::FNM_DOTMATCH ],
           '名前の一致で拡張特殊文字を使う'               => [ :名前の一致で拡張特殊文字を使う,               File::Constants::FNM_EXTGLOB ],
           '名前の一致で無効化文字を使わない'             => [ :名前の一致で無効化文字を使わない,             File::Constants::FNM_NOESCAPE ],
           '名前の一致で区切られた範囲に限定'             => [ :名前の一致で区切られた範囲に限定,             File::Constants::FNM_PATHNAME ],
           '名前の一致で基盤に従って大文字と小文字を無視' => [ :名前の一致で基盤に従って大文字と小文字を無視, File::Constants::FNM_SYSCASE ],
           '排他制御で排他'                               => [ :排他制御で排他,                               File::Constants::LOCK_EX ],
           '排他制御で遮られない'                         => [ :排他制御で遮られない,                         File::Constants::LOCK_NB ],
           '排他制御で共有'                               => [ :排他制御で共有,                               File::Constants::LOCK_SH ],
           '排他制御で開放'                               => [ :排他制御で開放,                               File::Constants::LOCK_UN ],
           '利用時刻を更新しない'                         => [ :利用時刻を更新しない,                         File::Constants::NOATIME ],
           '端末装置を制御しない'                         => [ :端末装置を制御しない,                         File::Constants::NOCTTY ],
           '連係を追跡しない'                             => [ :連係を追跡しない,                             File::Constants::NOFOLLOW ],
           '遮られない'                                   => [ :遮られない,                                   File::Constants::NONBLOCK ],
           '常に無効な装置'                               => [ :常に無効な装置,                               File::Constants::NULL ],
           '読み込み専用'                                 => [ :読み込み専用,                                 File::Constants::RDONLY ],
           '読み書き両用'                                 => [ :読み書き両用,                                 File::Constants::RDWR ])
      資料('読み込みを同期',                                 [ :読み込みを同期,                               File::Constants::RSYNC]) if (defined? File::Constants::RSYNC)
      資料('削除を共有',                                     [ :削除を共有,                                   File::Constants::SHARE_DELETE ]) if (defined? File::Constants::SHARE_DELETE)
      資料('同期'                                         => [ :同期,                                         File::Constants::SYNC ],
           '一時ファイル'                                 => [ :一時ファイル,                                 File::Constants::TMPFILE ],
           '切り捨て'                                     => [ :切り捨て,                                     File::Constants::TRUNC ],
           '書き込み専用'                                 => [ :書き込み専用,                                 File::Constants::WRONLY ])
      試験('日本語のファイル定数の付加と付与を確認') {|資料|
        日本語の定数名, 元の定数の値 = 資料

        付加対象の組 = 組.新規
        付加対象の組.付加(ファイル::定数)
        同一であることを確認(元の定数の値, 付加対象の組.公開された範囲で送信(日本語の定数名))

        付与対象の組 = 組.新規
        付与対象の組.付与(ファイル::定数)
        同一であることを確認(元の定数の値, 付与対象の組.公開された範囲で送信(日本語の定数名))
      }
    }

    組(:ファイル_状態の試験, 原型: 試験単位::試験事例) {
      資料('最終利用時刻'                   => [ :最終利用時刻,                   :atime ],
           '作成時刻'                       => [ :作成時刻,                       :birthtime ],
           '入出力単位'                     => [ :入出力単位,                     :blksize ],
           '固定長で入出力する装置か?'      => [ :固定長で入出力する装置か?,      :blockdev? ],
           '入出力単位の数'                 => [ :入出力単位の数,                 :blocks ],
           '文字単位で入出力する装置か?'    => [ :文字単位で入出力する装置か?,    :chardev? ],
           '最終状態変更時刻'               => [ :最終状態変更時刻,               :ctime ],
           'ファイルシステムの装置の番号'   => [ :ファイルシステムの装置の番号,   :dev ],
           'ファイルシステムの装置の主番号' => [ :ファイルシステムの装置の主番号, :dev_major ],
           'ファイルシステムの装置の副番号' => [ :ファイルシステムの装置の副番号, :dev_minor ],
           'ディレクトリか?'                => [ :ディレクトリか?,                :directory? ],
           '実行できるか?'                  => [ :実行できるか?,                  :executable? ],
           '実の所属で実行できるか?'        => [ :実の所属で実行できるか?,        :executable_real? ],
           'ファイルか?'                    => [ :ファイルか?,                    :file? ],
           'ファイルの種類'                 => [ :ファイルの種類,                 :ftype ],
           'グループ識別番号'               => [ :グループ識別番号,               :gid ],
           '実効グループに所属するか?'      => [ :実効グループに所属するか?,      :grpowned? ],
           'i_node番号'                     => [ :i_node番号,                     :ino ],
           '操作許可'                       => [ :操作許可,                       :mode ],
           '最終更新時刻'                   => [ :最終更新時刻,                   :mtime ],
           '結び付きの数'                   => [ :結び付きの数,                   :nlink ],
           '所有しているか?'                => [ :所有しているか?,                :owned? ],
           '配管か?'                        => [ :配管か?,                        :pipe? ],
           '装置の番号'                     => [ :装置の番号,                     :rdev ],
           '装置の主番号'                   => [ :装置の主番号,                   :rdev_major ],
           '装置の副番号'                   => [ :装置の副番号,                   :rdev_minor ],
           '読めるか?'                      => [ :読めるか?,                      :readable? ],
           '実の所属で読めるか?'            => [ :実の所属で読めるか?,            :readable_real? ],
           '実効グループを変更するか?'      => [ :実効グループを変更するか?,      :setgid? ],
           '実効ユーザを変更するか?'        => [ :実効ユーザを変更するか?,        :setuid? ],
           '大きさ'                         => [ :大きさ,                         :size ],
           '内容があるか?'                  => [ :内容があるか?,                  :size? ],
           'ソケットか?'                    => [ :ソケットか?,                    :socket? ],
           '貼り付くか?'                    => [ :貼り付くか?,                    :sticky? ],
           '名前による連係か?'              => [ :名前による連係か?,              :symlink? ],
           'ユーザ識別番号'                 => [ :ユーザ識別番号,                 :uid ],
           '誰でも読めるか?'                => [ :誰でも読めるか?,                :world_readable? ],
           '誰でも書けるか?'                => [ :誰でも書けるか?,                :world_writable? ],
           '書けるか?'                      => [ :書けるか?,                      :writable? ],
           '実の所属で書けるか?'            => [ :実の所属で書けるか?,            :writable_real? ],
           '大きさが零か?'                  => [ :大きさが零か?,                  :zero? ])
      試験('公開された操作の日本語の別名を確認') {|資料|
        日本語の別名, 元の名前 = 資料
        別名であることを確認(ファイル::状態.新規(ファイル::常に無効な装置), 日本語の別名, 元の名前)
        含まれることを確認(ファイル::状態.生成物が持つ公開された操作の一覧, 日本語の別名)
      }
    }

    組(:ディレクトリの試験, 原型: 試験単位::試験事例) {
      資料('名前の一致'                 => [ :名前の一致,                 :glob ],
           '作業ディレクトリの変更'     => [ :作業ディレクトリの変更,     :chdir ],
           'ファイル名の一覧'           => [ :ファイル名の一覧,           :children ],
           '最上位のディレクトリを変更' => [ :最上位のディレクトリを変更, :chroot ],
           '削除'                       => [ :削除,                       :delete ],
           '結び付きを解く'             => [ :結び付きを解く,             :unlink ],
           'ファイル名毎に'             => [ :ファイル名毎に,             :each_child ],
           '空か?'                      => [ :空か?,                      :empty? ],
           '項目の一覧'                 => [ :項目の一覧,                 :entries ],
           '存在するか?'                => [ :存在するか?,                :exist? ],
           '一つずつ'                   => [ :一つずつ,                   :foreach ],
           '作業ディレクトリを取得'     => [ :作業ディレクトリを取得,     :getwd ],
           '作業ディレクトリ'           => [ :作業ディレクトリ,           :pwd ],
           '本拠'                       => [ :本拠,                       :home ],
           '作成'                       => [ :作成,                       :mkdir ],
           '開く'                       => [ :開く,                       :open ])
      試験('特異操作の日本語の別名を確認') {|資料|
        日本語の別名, 元の名前 = 資料
        別名であることを確認(ディレクトリ, 日本語の別名, 元の名前)
        含まれることを確認(ディレクトリ.公開された操作の一覧, 日本語の別名)
      }

      資料('ファイル名の一覧'       => [ :ファイル名の一覧,       :children ],
           '閉じる'                 => [ :閉じる,                 :close ],
           '個別に'                 => [ :個別に,                 :each ],
           'ファイル名毎に'         => [ :ファイル名毎に,         :each_child ],
           'ファイル記述子'         => [ :ファイル記述子,         :fileno ],
           'ファイルへの経路'       => [ :ファイルへの経路,       :path ],
           'ファイルへの経路に変換' => [ :ファイルへの経路に変換, :to_path ],
           '位置'                   => [ :位置,                   :pos ],
           '位置を告げよ'           => [ :位置を告げよ,           :tell ],
           '位置='                  => [ :位置=,                  :pos= ],
           '移動'                   => [ :移動,                   :seek ],
           '読む'                   => [ :読む,                   :read ],
           '巻き戻す'               => [ :巻き戻す,               :rewind ])
      試験('公開された操作の日本語の別名を確認') {|資料|
        日本語の別名, 元の名前 = 資料
        ディレクトリ.開く(ディレクトリ.作業ディレクトリ) {|あるディレクトリ|
          別名であることを確認(あるディレクトリ, 日本語の別名, 元の名前)
          含まれることを確認(ディレクトリ.生成物が持つ公開された操作の一覧, 日本語の別名)
        }
      }
    }

    組(:ファイル操作の試験, 原型: 試験単位::試験事例) {
      資料('固定長で入出力する装置か?'   => [ :固定長で入出力する装置か?,   :blockdev? ],
           '文字単位で入出力する装置か?' => [ :文字単位で入出力する装置か?, :chardev? ],
           'ディレクトリか?'             => [ :ディレクトリか?,             :directory? ],
           '大きさが零か?'               => [ :大きさが零か?,               :zero? ],
           '空か?'                       => [ :空か?,                       :empty? ],
           '実行できるか?'               => [ :実行できるか?,               :executable? ],
           '実の所属で実行できるか?'     => [ :実の所属で実行できるか?,     :executable_real? ],
           '存在するか?'                 => [ :存在するか?,                 :exist? ],
           'ファイルか?'                 => [ :ファイルか?,                 :file? ],
           '実効グループに所属するか?'   => [ :実効グループに所属するか?,   :grpowned? ],
           '同一のファイルか?'           => [ :同一のファイルか?,           :identical? ],
           '所有しているか?'             => [ :所有しているか?,             :owned? ],
           '配管か?'                     => [ :配管か?,                     :pipe? ],
           '読めるか?'                   => [ :読めるか?,                   :readable? ],
           '実の所属で読めるか?'         => [ :実の所属で読めるか?,         :readable_real? ],
           '実効グループを変更するか?'   => [ :実効グループを変更するか?,   :setgid? ],
           '実効ユーザを変更するか?'     => [ :実効ユーザを変更するか?,     :setuid? ],
           '大きさ'                      => [ :大きさ,                      :size ],
           '内容があるか?'               => [ :内容があるか?,               :size? ],
           'ソケットか?'                 => [ :ソケットか?,                 :socket? ],
           '貼り付くか?'                 => [ :貼り付くか?,                 :sticky? ],
           '名前による連係か?'           => [ :名前による連係か?,           :symlink? ],
           '誰でも読めるか?'             => [ :誰でも読めるか?,             :world_readable? ],
           '誰でも書けるか?'             => [ :誰でも書けるか?,             :world_writable? ],
           '書けるか?'                   => [ :書けるか?,                   :writable? ],
           '実の所属で書けるか?'         => [ :実の所属で書けるか?,         :writable_real? ])
      試験('部の関数の日本語の別名を確認') {|資料|
        日本語の別名, 元の名前 = 資料
        別名であることを確認(ファイルの検査, 日本語の別名, 元の名前)
        含まれることを確認(ファイルの検査.生成物が持つ秘密の操作の一覧, 日本語の別名)
        含まれることを確認(ファイルの検査.公開された操作の一覧, 元の名前)
        含まれることを確認(ファイルの検査.公開された操作の一覧, 日本語の別名)
      }
    }
  }
}

# Local Variables:
# mode: Ruby
# indent-tabs-mode: nil
# End:
