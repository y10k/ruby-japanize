#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

require 'japanize'

標準出力へ書く = 無値           # 肯否分岐がスコープを作るので、あらかじめ局所変数を初期化しておく
もし条件が{ スクリプトの引数[0] == "-c" }.であるなら{
  標準出力へ書く = 1
  スクリプトの引数.先頭から取り出す
}.である

$開始を見た数 = 0
$終了を見た数 = 0

行 = 無値                       # 肯否分岐がスコープを作るので、あらかじめ局所変数を初期化しておく
出力先 = 無値                   # 肯否分岐がスコープを作るので、あらかじめ局所変数を初期化しておく
この条件なら{ 行 = 行を取得() }.繰り返す{|制御|
  もし条件が{ /^begin\s*(\d*)\s*(\S*)/ =~ 行 }.であるなら{
    $操作許可, $ファイル = $1, $2
    $開始を見た数 += 1
    もし条件が{ 標準出力へ書く }.であるなら{
      出力先 = 標準出力
    }.でなければ{
      もし条件が{ $ファイル != "" }.であるなら{ 出力先 = ファイルを開く($ファイル, "w") }.である
    }.である
    出力先.バイナリ形式
    制御.終わる
  }.である
}

もし条件が{ $開始を見た数 }.でなければ{ 例外を発生 "beginが見つかりません" }.である

出力先.バイナリ形式
この条件なら{ 行 = 行を取得 }.繰り返す{|制御|
  もし条件が{ /^end/ =~ 行 }.であるなら{
    $終了を見た数 += 1
    もし条件が{ 標準出力へ書く }.でなければ{ 出力先.閉じる }.である
    もし条件が{ 標準出力へ書く }.でなければ{ ファイル.操作許可を変更($操作許可.八進数, $ファイル) }.である
  }.である
  行.置換!(/[a-z]+$/, "")       # 冗長な行末の小文字を削除
  もし条件が{ /[a-z]/ =~ 行 }.であるなら{ 制御.次へ進む }.である
  もし条件が{ ! (((($_[0] - 32) & 077) + 2) / 3 == $_.長さ / 4) }.であるなら{ 制御.次へ勧む }.である
  もし条件が{ $開始を見た数 > $終了を見た数 }.であるなら{ 出力先 << $_.情報を開梱("u") }.である
}

もし条件が{ $開始を見た数 > $終了を見た数 }.であるなら{ 例外を発生 "endが見つかりません" }.である
もし条件が{ ! $開始を見た数 }.であるなら{ 例外を発生 "beginが見つかりません" }.である
終了 0
